# Generated by Django 5.0.1 on 2025-10-21 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0003_siteconfig_about_text_siteconfig_home_description_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademyExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('language', models.CharField(choices=[('python', 'Python'), ('javascript', 'JavaScript'), ('java', 'Java'), ('cpp', 'C++'), ('sql', 'SQL'), ('html', 'HTML/CSS'), ('other', 'Autre')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('medium', 'Moyen'), ('hard', 'Difficile')], default='easy', max_length=20)),
                ('instructions', models.TextField(help_text='Detailed instructions for the exercise')),
                ('starter_code', models.TextField(blank=True, help_text='Initial code provided to students')),
                ('solution_code', models.TextField(help_text='Expected solution (for validation)')),
                ('test_cases', models.JSONField(blank=True, help_text='Test cases as JSON', null=True)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Academy Exercise',
                'verbose_name_plural': 'Academy Exercises',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AcademyVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('video_url', models.URLField(help_text='YouTube or Vimeo URL')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='academy/thumbnails/')),
                ('duration', models.CharField(help_text="e.g., '45 min'", max_length=20)),
                ('level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé')], default='beginner', max_length=20)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Academy Video',
                'verbose_name_plural': 'Academy Videos',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField(default=0)),
                ('streak_days', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_exercises', models.ManyToManyField(blank=True, related_name='completed_by', to='portfolio.academyexercise')),
                ('completed_videos', models.ManyToManyField(blank=True, related_name='completed_by', to='portfolio.academyvideo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academy_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Progress',
                'verbose_name_plural': 'User Progress',
            },
        ),
    ]
