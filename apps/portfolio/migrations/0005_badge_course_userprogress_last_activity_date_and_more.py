# Generated by Django 5.0.1 on 2025-10-22 00:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0004_academyexercise_academyvideo_userprogress'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='üèÜ', help_text='Emoji or icon', max_length=50)),
                ('condition_type', models.CharField(choices=[('exercises_completed', 'Exercises Completed'), ('videos_completed', 'Videos Completed'), ('streak', 'Streak Days'), ('xp_total', 'Total XP'), ('level_reached', 'Level Reached'), ('first_try_success', 'First Try Success'), ('time_based', 'Time Based Activity')], max_length=30)),
                ('condition_value', models.IntegerField(help_text='Threshold to unlock')),
                ('color', models.CharField(default='primary', help_text='Badge color theme', max_length=20)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='courses/')),
                ('level', models.CharField(choices=[('beginner', 'D√©butant'), ('intermediate', 'Interm√©diaire'), ('advanced', 'Avanc√©')], default='beginner', max_length=20)),
                ('order', models.IntegerField(default=0, help_text='Display order on courses list')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Show on homepage')),
                ('estimated_duration', models.IntegerField(default=0, help_text='Total duration in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='userprogress',
            name='last_activity_date',
            field=models.DateField(blank=True, help_text='Last day user was active', null=True),
        ),
        migrations.AddField(
            model_name='userprogress',
            name='level',
            field=models.IntegerField(default=1, help_text='Current level'),
        ),
        migrations.AddField(
            model_name='userprogress',
            name='xp',
            field=models.IntegerField(default=0, help_text='Experience points'),
        ),
        migrations.CreateModel(
            name='CourseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('exercise', 'Exercise')], max_length=10)),
                ('order', models.IntegerField(default=0, help_text='Order in course sequence (1, 2, 3...)')),
                ('is_required', models.BooleanField(default=True, help_text='Must complete to proceed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='portfolio.course')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_items', to='portfolio.academyexercise')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_items', to='portfolio.academyvideo')),
            ],
            options={
                'verbose_name': 'Course Item',
                'verbose_name_plural': 'Course Items',
                'ordering': ['course', 'order'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'ordering': ['-unlocked_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='UserCourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_started', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed_items', models.ManyToManyField(blank=True, related_name='completed_by_users', to='portfolio.courseitem')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='portfolio.course')),
                ('current_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_users', to='portfolio.courseitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Course Progress',
                'verbose_name_plural': 'User Course Progress',
                'ordering': ['-last_accessed'],
                'unique_together': {('user', 'course')},
            },
        ),
    ]
